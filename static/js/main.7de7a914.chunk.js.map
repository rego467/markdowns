{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["marked","require","newText","App","state","text","this","setState","markdown","breaks","className","style","backgroundColor","height","id","value","onChange","event","handleChange","target","dangerouslySetInnerHTML","__html","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAGIA,EAASC,EAAQ,IACfC,EAAO,iaA+DEC,E,4MAlCbC,MAAO,CACLC,KAAMH,G,kDAER,SAAcG,GACZC,KAAKC,SAAS,CACZF,W,oBAGL,WAAS,IAAD,OACFA,EAAQC,KAAKF,MAAbC,KACCG,EAAWR,EAAOK,EAAM,CAAEI,QAAQ,IACxC,OACE,qBAAKC,UAAU,sBAAf,SACE,sBAAKA,UAAU,MAAMC,MAAO,CAACC,gBAAgB,QAASC,OAAO,SAA7D,UACE,qBAAKH,UAAU,WAAf,SACE,gCACE,yCACA,0BAAUI,GAAG,SAASC,MAAOV,EAAMW,SAAU,SAACC,GAAD,OAAS,EAAKC,aAAaD,EAAME,OAAOJ,QAAQL,UAAU,kBAG3G,qBAAKA,UAAU,WAAf,SACA,sBAAKC,MAAO,CAACC,gBAAgB,QAASC,OAAO,QAA7C,UACI,yCACA,qBAAKC,GAAG,UAAUM,wBAAyB,CAACC,OAAQb,GAAYE,UAAU,2B,GAxBpEY,IAAMC,WCpBTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7de7a914.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nlet marked = require(\"marked\");\nconst newText = `\nthis is a paragraph\n**this is bolded text** \n\n# heading 1\n## heading 2\n\n- list item 1\n- list item 2\n- list item 3\n\n[visit website](https://www.freecodecamp.org)\n> Block Quotes!\n\nthis is a inline \\`<div></div>\\`\n\nthis is a block of code\n\n\\`\\`\\`\n  let a = 10;\n  let b = 5;\n  let c = a + b;\n\\`\\`\\`\n\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\n\n`\n\nclass App extends React.Component {\n  state ={\n    text: newText\n  }\n  handleChange (text){\n    this.setState({\n      text\n    })\n  }\n render(){\n  let {text} = this.state;\n  const markdown = marked(text, { breaks: true });\n  return (\n    <div className=\"container-fluid App\">\n      <div className=\"row\" style={{backgroundColor:'green', height:\"100vh\"}}>\n        <div className=\"col-sm-6\">\n          <div>\n            <p>markdown</p>\n            <textarea id=\"editor\" value={text} onChange={(event)=>this.handleChange(event.target.value)} className=\"markdown\" />\n          </div>\n        </div>\n        <div className=\"col-sm-6\">\n        <div style={{backgroundColor:'green', height:\"50vh\"}}>\n            <p>result: </p>\n            <div id=\"preview\" dangerouslySetInnerHTML={{__html: markdown }} className=\"markdown\">\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}